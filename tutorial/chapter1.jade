.step(data-title='How it Works')
  :markdown
    ## How It Works

    Let's go over the steps necessary to implement click-to-call in our application:

    ![Click-to-call Diagram](//s3-us-west-2.amazonaws.com/deved/clicktocall.png)

    1. A website visitor wants to connect to your organization.  She submits a web form with her phone number to receive a call connecting her to your sales or support team. 

    1. Your web application receives the form submission.  An HTTP request is initiated from your application to Twilio to initiate an outbound call. 

    1. Twilio receives the request and initiates a call to the user's phone number.

    1. User receives the call.

    1. After the call connects, Twilio asks our application for [TwiML instructions](/docs/api/twiml). Our TwiML instructs Twilio to connect the user to our sales or support teams.

    ## What We Will Learn

    This How-To demonstrates initializing a call using the [Twilio REST API][rest] and creating TwiML call logic using the [Say][say] and [Dial][dial] verbs.

    Sound like a plan? Let's get started!

    [rest]: /docs/api/rest/
    [dial]: /docs/api/twiml/dial
    [say]: /docs/api/twiml/say
.step(data-title='Environment', data-file='app/controllers/twilio_controller.rb', data-highlight="10-13")
  :markdown
    ## Environment
    To create our click-to-call application, we'll first need to setup our environment.
    
    Let's put our Twilio credentials in a place where our application can access them. 
    For the purposes of this tutorial, we'll place them in environment variables that our application can read.
    
    You can find your Twilio credentials in your [Account Dashboard](/user/account).
      
    ```shell
    export TWILIO_ACCOUNT_SID=ACxxxxxxxxxxxx
    export TWILIO_AUTH_TOKEN=yyyyyyyyyyyyyyy 
    ```
